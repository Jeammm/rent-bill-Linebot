const rentingController = require("./rentingController");
const client = require("../lineClient");

async function handleSendRentPrice(userId, houseId, month, year) {
  try {
    const data = await rentingController.handleCalculateMonthlyRent(
      houseId,
      month,
      year
    );

    await client.pushMessage(userId, {
      type: "text",
      text:
        `‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏Ñ‡πà‡∏≤‡πÑ‡∏ü‡∏Ç‡∏≠‡∏á‡∏ö‡πâ‡∏≤‡∏ô ${data.house} ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ${data.month}/${data.year}:\n\n` +
        `- ‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥: ${data.cost.water} ‡∏ö‡∏≤‡∏ó\n` +
        `- ‡∏Ñ‡πà‡∏≤‡πÑ‡∏ü: ${data.cost.electricity} ‡∏ö‡∏≤‡∏ó\n` +
        `- ‡∏Ñ‡πà‡∏≤‡πÄ‡∏ä‡πà‡∏≤: ${data.rent_price} ‡∏ö‡∏≤‡∏ó\n` +
        `- ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${data.total} ‡∏ö‡∏≤‡∏ó`,
    });
  } catch (error) {
    console.error("Error sending rent price:", error);
    await client.pushMessage(userId, {
      type: "text",
      text: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤‡πÄ‡∏ä‡πà‡∏≤ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á",
    });
  }
}

async function handleMeterRecordInput(event, text) {
  const numbers = text.split(/\s+/).map(Number);
  const total = numbers.reduce((sum, n) => sum + n, 0);
  const tempData = numbers.join(",");

  await client.replyMessage(event.replyToken, {
    type: "template",
    altText: "Confirm the data",
    template: {
      type: "confirm",
      text: `‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏™‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç: ${numbers.join(
        ", "
      )}\n‡∏£‡∏ß‡∏°: ${total}\n‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?`,
      actions: [
        {
          type: "postback",
          label: "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å",
          data: `action=save&numbers=${tempData}`,
        },
        {
          type: "postback",
          label: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
          data: "action=cancel",
        },
      ],
    },
  });
}

async function handleMeterRecordInputConfirmation(event) {
  const data = new URLSearchParams(event.postback.data);
  const action = data.get("action");

  if (action === "save") {
    const numbers = data.get("numbers").split(",").map(Number);
    // üíæ TODO: Save numbers to database here
    await client.replyMessage(event.replyToken, {
      type: "text",
      text: `‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß: ${numbers.join(", ")}`,
    });
  } else if (action === "cancel") {
    await client.replyMessage(event.replyToken, {
      type: "text",
      text: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
    });
  }
}

module.exports = {
  handleSendRentPrice,
  handleMeterRecordInput,
  handleMeterRecordInputConfirmation,
};
